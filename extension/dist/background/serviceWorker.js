chrome.runtime.onInstalled.addListener(()=>{console.log("ThreadFinder service worker installed")});chrome.runtime.onStartup?.addListener(()=>{console.log("ThreadFinder service worker started")});try{chrome.runtime.onInstalled.addListener(()=>{chrome.contextMenus&&chrome.contextMenus.create({id:"threadfinder-search",title:'Search discussions for "%s"',contexts:["selection"]})}),chrome.contextMenus?.onClicked.addListener((e,n)=>{if(e.menuItemId==="threadfinder-search"&&e.selectionText){const r=e.selectionText.trim();if(!r)return;n?.id&&chrome.tabs.sendMessage(n.id,{type:"threadfinder:search",term:r},void 0,()=>{chrome.runtime.lastError})}})}catch(e){console.warn("Context menus not available:",e)}chrome.runtime.onMessage.addListener((e,n,r)=>e&&e.type==="threadfinder:fetchReddit"&&typeof e.term=="string"?((async()=>{try{const t=await y(e.term);r({ok:!0,items:t})}catch(t){console.error("Reddit fetch failed:",t),r({ok:!1,error:String(t)})}})(),!0):e&&e.type==="threadfinder:gemini"&&typeof e.prompt=="string"?((async()=>{try{const t=await w(e.prompt,e.context||"");r({text:t})}catch(t){console.error("Gemini API error:",t),r({error:t.message||"Failed to get response from Gemini",details:t.details})}})(),!0):!1);async function w(e,n=""){const t=(await chrome.storage.sync.get("GEMINI_API_KEY")).GEMINI_API_KEY;if(!t)throw new Error("Gemini API key not found. Please set it in the extension options.");const i={contents:[{role:"user",parts:[{text:`${e}

Context:
${n||"No additional context provided."}`}]}],generationConfig:{temperature:.7,topK:40,topP:.95,maxOutputTokens:1024}},o=["gemini-1.5-flash","gemini-1.5-pro"];let c=null;for(const d of o){const a=`https://generativelanguage.googleapis.com/v1/models/${d}:generateContent?key=${t}`;try{const s=await fetch(a,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)});if(!s.ok){const f=await s.json().catch(()=>({})),h=new Error(`API error (${d}): ${s.status} ${s.statusText}`);h.details=f,c=h;continue}const l=(await s.json()).candidates?.[0]?.content?.parts?.[0]?.text;if(l)return l;c=new Error(`Empty response from ${d}`)}catch(s){c=s}}throw c||new Error("Gemini request failed")}const u=new Map,p=120*1e3;async function y(e){const n=e.trim().toLowerCase(),r=u.get(n),t=Date.now();if(r&&t-r.ts<p)return r.rows;const i=await g(e);return u.set(n,{ts:t,rows:i}),i}async function g(e){const n=[`https://api.reddit.com/search.json?q=${encodeURIComponent(e)}&limit=5&sort=relevance`,`https://www.reddit.com/search.json?q=${encodeURIComponent(e)}&limit=5&sort=relevance&raw_json=1`];let r=null;for(let t=0;t<n.length;t++){const i=n[t];try{const o=await fetch(i,{cache:"no-store"});if(!o.ok){r=new Error(`status ${o.status}`),await m(150);continue}return((await o.json())?.data?.children||[]).map(a=>a.data).map(a=>({title:a.title,url:`https://www.reddit.com${a.permalink}`,subreddit:a.subreddit}))}catch(o){r=o,await m(150)}}throw r||new Error("Reddit fetch failed")}function m(e){return new Promise(n=>setTimeout(n,e))}
