function x(){const e=document.createElement("div");e.id="threadfinder-panel-host",e.style.position="fixed",e.style.bottom="16px",e.style.right="16px",e.style.zIndex="2147483647",e.style.width="440px",e.style.maxHeight="60vh",e.style.boxShadow="0 10px 30px rgba(0,0,0,0.2)",e.style.borderRadius="10px",e.style.overflow="hidden";const i=e.attachShadow({mode:"open"}),t=document.createElement("div");t.style.fontFamily="system-ui, Arial, sans-serif",t.style.background="white",t.style.border="1px solid #e5e7eb",t.innerHTML=`
    <div style="display:flex; align-items:center; justify-content:space-between; padding:10px 12px; background:#111827; color:white;">
      <div style="display:flex; align-items:center; gap:8px; font-weight:600;">ðŸ§µ ThreadFinder</div>
      <button id="tf-close" style="background:transparent; border:none; color:#e5e7eb; font-size:16px; cursor:pointer">âœ•</button>
    </div>
    <div style="padding:10px 12px; border-bottom: 1px solid #e5e7eb;">
      <div id="tf-term" style="font-size:12px; color:#6b7280; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;"></div>
      <div style="margin-top:8px; display:flex; gap:8px; flex-wrap: wrap;">
        <button data-site="reddit" class="tf-tab" style="display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e5e7eb; background:#f9fafb; border-radius:6px; cursor:pointer">Reddit</button>
        <button data-site="stackoverflow" class="tf-tab" style="display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e5e7eb; background:#f9fafb; border-radius:6px; cursor:pointer">StackOverflow</button>
        <button data-site="wikipedia" class="tf-tab" style="display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e5e7eb; background:#f9fafb; border-radius:6px; cursor:pointer">Wikipedia</button>
        <button data-site="gemini-answer" class="tf-tab" style="display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e5e7eb; background:#f9fafb; border-radius:6px; cursor:pointer">Gemini Answer</button>
      </div>
    </div>
    <div id="tf-results" style="padding:10px 12px; overflow:auto; max-height: 45vh;">
      <div style="color:#6b7280;">Pick a source above to see results here.</div>
    </div>
  `,i.appendChild(t);try{const a=i.querySelector('button.tf-tab[data-site="reddit"]'),l=i.querySelector('button.tf-tab[data-site="stackoverflow"]'),n=i.querySelector('button.tf-tab[data-site="wikipedia"]'),c=i.querySelector('button.tf-tab[data-site="gemini-answer"]'),r=chrome.runtime?.getURL?chrome.runtime.getURL("reddit.svg"):"reddit.svg",o=chrome.runtime?.getURL?chrome.runtime.getURL("stackoverflow.svg"):"stackoverflow.svg",s=chrome.runtime?.getURL?chrome.runtime.getURL("wikipedia.svg"):"wikipedia.svg",d=chrome.runtime?.getURL?chrome.runtime.getURL("gemini.svg"):"gemini.svg";a&&(a.innerHTML=`<img alt="Reddit" src="${r}" style="width:16px;height:16px;display:inline-block;"/> <span>Reddit</span>`),l&&(l.innerHTML=`<img alt="StackOverflow" src="${o}" style="width:16px;height:16px;display:inline-block;"/> <span>StackOverflow</span>`),n&&(n.innerHTML=`<img alt="Wikipedia" src="${s}" style="width:16px;height:16px;display:inline-block;"/> <span>Wikipedia</span>`),c&&(c.innerHTML=`<img alt="Gemini Answer" src="${d}" style="width:16px;height:16px;display:inline-block;"/> <span>Gemini Answer</span>`)}catch{}return{host:e,shadow:i,container:t}}function p(e,i){const t=e.getElementById("tf-results");t&&(t.innerHTML=i)}async function y(e){return await new Promise((i,t)=>{try{chrome.runtime.sendMessage({type:"threadfinder:fetchReddit",term:e},a=>{if(chrome.runtime.lastError){t(new Error(chrome.runtime.lastError.message));return}if(!a||!a.ok){t(new Error(a?.error||"Reddit request failed"));return}i(a.items)})}catch(a){t(a)}})}async function b(e){const i=`https://api.stackexchange.com/2.3/search/advanced?order=desc&sort=relevance&q=${encodeURIComponent(e)}&site=stackoverflow&pagesize=5`,t=await fetch(i);if(!t.ok)throw new Error("StackOverflow request failed");return((await t.json())?.items||[]).map(n=>({title:n.title,url:n.link,score:n.score,answers:n.answer_count}))}async function v(e){const i=`https://en.wikipedia.org/w/api.php?action=query&list=search&srsearch=${encodeURIComponent(e)}&format=json&origin=*&srlimit=5`,t=await fetch(i);if(!t.ok)throw new Error("Wikipedia request failed");return((await t.json())?.query?.search||[]).map(n=>{const c=n.title,r=c.replace(/ /g,"_"),o=`https://en.wikipedia.org/wiki/${encodeURIComponent(r)}`,s=String(n.snippet||"").replace(/<[^>]+>/g,"");return{title:c,url:o,extra:s}})}async function k(e,i=""){function t(){return new Promise((l,n)=>{try{chrome.runtime.sendMessage({type:"threadfinder:gemini",prompt:e,context:i},c=>{const r=chrome.runtime.lastError;if(r){n(new Error(r.message));return}l(c)})}catch(c){n(c)}})}const a=(l,n=45e3)=>new Promise((c,r)=>{const o=setTimeout(()=>r(new Error("Gemini request timed out")),n);l.then(s=>{clearTimeout(o),c(s)}).catch(s=>{clearTimeout(o),r(s)})});try{return await a(t())}catch(l){if(String(l?.message||l).includes("Receiving end does not exist"))return await new Promise(c=>setTimeout(c,300)),await a(t());const n=String(l?.message||l);if(n.includes("Extension context invalidated")||n.includes("The message port closed"))return{error:"The extension was reloaded. Please refresh this page and try again."};throw l}}function g(e){return e.length?`
    <ul style="list-style:none; padding:0; margin:0; display:grid; gap:8px;">
      ${e.map(i=>`
        <li class="tf-result" style="border:1px solid #e5e7eb; border-radius:8px; padding:8px 10px;">
          <a href="${i.url}" target="_blank" style="text-decoration:none; color:#111827; font-weight:600;">${i.title}</a>
          ${i.extra?`<div style="font-size:12px; color:#6b7280; margin-top:2px;">${i.extra}</div>`:""}
        </li>`).join("")}
    </ul>
  `:'<div style="color:#6b7280;">No results found.</div>'}function h(e){document.getElementById("threadfinder-panel-host")?.remove();const{host:i,shadow:t}=x();document.documentElement.appendChild(i);const a=t.getElementById("tf-term");a&&(a.textContent=`Selection: ${e}`),t.getElementById("tf-close")?.addEventListener("click",()=>{m="",i.remove()});function n(r){p(t,`<div style="color:#6b7280;">Loading ${r}â€¦</div>`)}async function c(r){try{if(n(r),r==="reddit"){const o=await y(e),s=g(o.map(d=>({title:d.title,url:d.url,extra:`r/${d.subreddit}`})));p(t,s)}else if(r==="stackoverflow"){const o=await b(e),s=g(o.map(d=>({title:d.title,url:d.url,extra:`${d.answers} answers Â· score ${d.score}`})));p(t,s)}else if(r==="wikipedia"){const o=await v(e),s=g(o.map(d=>({title:d.title,url:d.url,extra:d.extra})));p(t,s)}else if(r==="gemini-answer"){p(t,'<div style="color:#6b7280; padding: 12px;">Asking Gemini about your selection...</div>');const o=e.length>1200?e.slice(0,1200)+"...":e,s=`Answer the following question or provide information about the following text: ${o}`,d=`The user selected this text on a webpage (truncated): ${o}`,u=await k(s,d);if(u.error){const f=u.details?`<pre style="white-space:pre-wrap; font-size:12px; color:#6b7280; margin-top:6px;">${JSON.stringify(u.details,null,2)}</pre>`:"";p(t,`<div style="color:#b91c1c; padding: 12px;">Error: ${u.error}${f}</div>`)}else{const f=u.text||"No response from Gemini";p(t,`
            <div style="padding: 12px;">
              <h3 style="font-weight: 600; margin-bottom: 8px; color: #111827;">Gemini's Response:</h3>
              <div style="white-space: pre-wrap; line-height: 1.5; color: #1f2937;">${f}</div>
            </div>
          `)}}}catch(o){if(r==="reddit"){const s=`https://www.reddit.com/search?q=${encodeURIComponent(e)}`;p(t,`<div>Couldnâ€™t load Reddit inline. <a href="${s}" target="_blank">Open results on Reddit</a>.</div>`)}else r==="gemini-answer"?p(t,`<div style="color:#b91c1c; padding: 12px;">Error with Gemini: ${o.message||"Unknown error"}</div>`):p(t,`<div style="color:#b91c1c; padding: 12px;">Error loading ${r}.</div>`)}}t.querySelectorAll(".tf-tab").forEach(r=>{r.addEventListener("click",o=>{const s=o.currentTarget.getAttribute("data-site");c(s)})})}function $(){const e=window.getSelection();return e?e.toString().trim():""}let m="";function w(){const e=$();e&&e!==m&&(m=e,h(e))}document.addEventListener("mouseup",()=>{setTimeout(w,0)});document.addEventListener("keyup",e=>{(e.key==="Shift"||e.key==="ArrowLeft"||e.key==="ArrowRight"||e.key==="ArrowUp"||e.key==="ArrowDown")&&setTimeout(w,0)});chrome.runtime.onMessage.addListener((e,i,t)=>(e&&e.type==="threadfinder:search"&&typeof e.term=="string"&&(h(e.term),t()),!1));
