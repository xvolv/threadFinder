function x(){const e=document.createElement("div");e.id="threadfinder-panel-host",e.style.position="fixed",e.style.bottom="16px",e.style.right="16px",e.style.zIndex="2147483647",e.style.width="440px",e.style.maxHeight="60vh",e.style.boxShadow="0 10px 30px rgba(0,0,0,0.2)",e.style.borderRadius="10px",e.style.overflow="hidden";const i=e.attachShadow({mode:"open"}),t=document.createElement("div");t.style.fontFamily="system-ui, Arial, sans-serif",t.style.background="white",t.style.border="1px solid #e5e7eb",t.innerHTML=`
    <div style="display:flex; align-items:center; justify-content:space-between; padding:10px 12px; background:#111827; color:white;">
      <div style="display:flex; align-items:center; gap:8px; font-weight:600;">ðŸ§µ ThreadFinder</div>
      <button id="tf-close" style="background:transparent; border:none; color:#e5e7eb; font-size:16px; cursor:pointer">âœ•</button>
    </div>
    <div style="padding:10px 12px; border-bottom: 1px solid #e5e7eb;">
      <div id="tf-term" style="font-size:12px; color:#6b7280; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;"></div>
      <div style="margin-top:8px; display:flex; gap:8px; flex-wrap: wrap;">
        <button data-site="reddit" class="tf-tab" style="display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e5e7eb; background:#f9fafb; border-radius:6px; cursor:pointer">Reddit</button>
        <button data-site="stackoverflow" class="tf-tab" style="display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e5e7eb; background:#f9fafb; border-radius:6px; cursor:pointer">StackOverflow</button>
        <button data-site="wikipedia" class="tf-tab" style="display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e5e7eb; background:#f9fafb; border-radius:6px; cursor:pointer">Wikipedia</button>
        <button data-site="gemini-answer" class="tf-tab" style="display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e5e7eb; background:#f9fafb; border-radius:6px; cursor:pointer">Gemini Answer</button>
        <button data-site="gemini-summary" class="tf-tab" style="display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e5e7eb; background:#f9fafb; border-radius:6px; cursor:pointer">Gemini Summary</button>
      </div>
    </div>
    <div id="tf-results" style="padding:10px 12px; overflow:auto; max-height: 45vh;">
      <div style="color:#6b7280;">Pick a source above to see results here.</div>
    </div>
  `,i.appendChild(t);try{const d=i.querySelector('button.tf-tab[data-site="reddit"]'),l=i.querySelector('button.tf-tab[data-site="stackoverflow"]'),s=i.querySelector('button.tf-tab[data-site="wikipedia"]'),c=i.querySelector('button.tf-tab[data-site="gemini-answer"]'),r=i.querySelector('button.tf-tab[data-site="gemini-summary"]'),n=chrome.runtime?.getURL?chrome.runtime.getURL("reddit.svg"):"reddit.svg",o=chrome.runtime?.getURL?chrome.runtime.getURL("stackoverflow.svg"):"stackoverflow.svg",a=chrome.runtime?.getURL?chrome.runtime.getURL("wikipedia.svg"):"wikipedia.svg",p=chrome.runtime?.getURL?chrome.runtime.getURL("gemini.svg"):"gemini.svg";d&&(d.innerHTML=`<img alt="Reddit" src="${n}" style="width:16px;height:16px;display:inline-block;"/> <span>Reddit</span>`),l&&(l.innerHTML=`<img alt="StackOverflow" src="${o}" style="width:16px;height:16px;display:inline-block;"/> <span>StackOverflow</span>`),s&&(s.innerHTML=`<img alt="Wikipedia" src="${a}" style="width:16px;height:16px;display:inline-block;"/> <span>Wikipedia</span>`),c&&(c.innerHTML=`<img alt="Gemini Answer" src="${p}" style="width:16px;height:16px;display:inline-block;"/> <span>Gemini Answer</span>`),r&&(r.innerHTML=`<img alt="Gemini Summary" src="${p}" style="width:16px;height:16px;display:inline-block;"/> <span>Gemini Summary</span>`)}catch{}return{host:e,shadow:i,container:t}}function u(e,i){const t=e.getElementById("tf-results");t&&(t.innerHTML=i)}async function b(e){return await new Promise((i,t)=>{try{chrome.runtime.sendMessage({type:"threadfinder:fetchReddit",term:e},d=>{if(chrome.runtime.lastError){t(new Error(chrome.runtime.lastError.message));return}if(!d||!d.ok){t(new Error(d?.error||"Reddit request failed"));return}i(d.items)})}catch(d){t(d)}})}async function v(e){const i=`https://api.stackexchange.com/2.3/search/advanced?order=desc&sort=relevance&q=${encodeURIComponent(e)}&site=stackoverflow&pagesize=5`,t=await fetch(i);if(!t.ok)throw new Error("StackOverflow request failed");return((await t.json())?.items||[]).map(s=>({title:s.title,url:s.link,score:s.score,answers:s.answer_count}))}async function k(e){const i=`https://en.wikipedia.org/w/api.php?action=query&list=search&srsearch=${encodeURIComponent(e)}&format=json&origin=*&srlimit=5`,t=await fetch(i);if(!t.ok)throw new Error("Wikipedia request failed");return((await t.json())?.query?.search||[]).map(s=>{const c=s.title,r=c.replace(/ /g,"_"),n=`https://en.wikipedia.org/wiki/${encodeURIComponent(r)}`,o=String(s.snippet||"").replace(/<[^>]+>/g,"");return{title:c,url:n,extra:o}})}async function g(e,i=""){function t(){return new Promise((l,s)=>{try{chrome.runtime.sendMessage({type:"threadfinder:gemini",prompt:e,context:i},c=>{const r=chrome.runtime.lastError;if(r){s(new Error(r.message));return}l(c)})}catch(c){s(c)}})}const d=(l,s=1e4)=>new Promise((c,r)=>{const n=setTimeout(()=>r(new Error("Gemini request timed out")),s);l.then(o=>{clearTimeout(n),c(o)}).catch(o=>{clearTimeout(n),r(o)})});try{return await d(t())}catch(l){if(String(l?.message||l).includes("Receiving end does not exist"))return await new Promise(c=>setTimeout(c,300)),await d(t());const s=String(l?.message||l);if(s.includes("Extension context invalidated")||s.includes("The message port closed"))return{error:"The extension was reloaded. Please refresh this page and try again."};throw l}}function m(e){return e.length?`
    <ul style="list-style:none; padding:0; margin:0; display:grid; gap:8px;">
      ${e.map(i=>`
        <li class="tf-result" style="border:1px solid #e5e7eb; border-radius:8px; padding:8px 10px;">
          <a href="${i.url}" target="_blank" style="text-decoration:none; color:#111827; font-weight:600;">${i.title}</a>
          ${i.extra?`<div style="font-size:12px; color:#6b7280; margin-top:2px;">${i.extra}</div>`:""}
        </li>`).join("")}
    </ul>
  `:'<div style="color:#6b7280;">No results found.</div>'}function h(e){document.getElementById("threadfinder-panel-host")?.remove();const{host:i,shadow:t}=x();document.documentElement.appendChild(i);const d=t.getElementById("tf-term");d&&(d.textContent=`Selection: ${e}`),t.getElementById("tf-close")?.addEventListener("click",()=>{f="",i.remove()});function s(r){u(t,`<div style="color:#6b7280;">Loading ${r}â€¦</div>`)}async function c(r){try{if(s(r),r==="reddit"){const n=await b(e),o=m(n.map(a=>({title:a.title,url:a.url,extra:`r/${a.subreddit}`})));u(t,o)}else if(r==="stackoverflow"){const n=await v(e),o=m(n.map(a=>({title:a.title,url:a.url,extra:`${a.answers} answers Â· score ${a.score}`})));u(t,o)}else if(r==="wikipedia"){const n=await k(e),o=m(n.map(a=>({title:a.title,url:a.url,extra:a.extra})));u(t,o)}else if(r==="gemini-answer"){u(t,'<div style="color:#6b7280; padding: 12px;">Asking Gemini about your selection...</div>');const n=await g(`Answer the following question or provide information about the following text: ${e}`,`The user selected this text on a webpage: ${e}`);if(n.error){const o=n.details?`<pre style="white-space:pre-wrap; font-size:12px; color:#6b7280; margin-top:6px;">${JSON.stringify(n.details,null,2)}</pre>`:"";u(t,`<div style="color:#b91c1c; padding: 12px;">Error: ${n.error}${o}</div>`)}else{const o=n.text||"No response from Gemini";u(t,`
            <div style="padding: 12px;">
              <h3 style="font-weight: 600; margin-bottom: 8px; color: #111827;">Gemini's Response:</h3>
              <div style="white-space: pre-wrap; line-height: 1.5; color: #1f2937;">${o}</div>
            </div>
          `)}}else if(r==="gemini-summary"){u(t,'<div style="color:#6b7280; padding: 12px;">Summarizing results with Gemini...</div>');const n=Array.from(t.querySelectorAll(".tf-result")).map(p=>({title:p.querySelector("h3, a")?.textContent||"",content:p.textContent||""})).filter(p=>p.title&&p.content);if(n.length===0){u(t,'<div style="color:#92400e; background-color: #fef3c7; padding: 12px; border-radius: 6px;">No results to summarize. Try a search first.</div>');return}const o=n.map((p,w)=>`Result ${w+1} (${p.title}): ${p.content.substring(0,500)}...`).join(`

`),a=await g("Please provide a concise summary of the following search results. Focus on the key points and insights.",o);if(a.error){const p=a.details?`<pre style="white-space:pre-wrap; font-size:12px; color:#6b7280; margin-top:6px;">${JSON.stringify(a.details,null,2)}</pre>`:"";u(t,`<div style="color:#b91c1c; padding: 12px;">Error: ${a.error}${p}</div>`)}else{const p=a.text||"No summary available";u(t,`
            <div style="padding: 12px;">
              <h3 style="font-weight: 600; margin-bottom: 8px; color: #111827;">Summary of Results:</h3>
              <div style="white-space: pre-wrap; line-height: 1.5; color: #1f2937;">${p}</div>
            </div>
          `)}}}catch(n){if(r==="reddit"){const o=`https://www.reddit.com/search?q=${encodeURIComponent(e)}`;u(t,`<div>Couldnâ€™t load Reddit inline. <a href="${o}" target="_blank">Open results on Reddit</a>.</div>`)}else r==="gemini-answer"||r==="gemini-summary"?u(t,`<div style="color:#b91c1c; padding: 12px;">Error with Gemini: ${n.message||"Unknown error"}</div>`):u(t,`<div style="color:#b91c1c; padding: 12px;">Error loading ${r}.</div>`)}}t.querySelectorAll(".tf-tab").forEach(r=>{r.addEventListener("click",n=>{const o=n.currentTarget.getAttribute("data-site");c(o)})})}function $(){const e=window.getSelection();return e?e.toString().trim():""}let f="";function y(){const e=$();e&&e!==f&&(f=e,h(e))}document.addEventListener("mouseup",()=>{setTimeout(y,0)});document.addEventListener("keyup",e=>{(e.key==="Shift"||e.key==="ArrowLeft"||e.key==="ArrowRight"||e.key==="ArrowUp"||e.key==="ArrowDown")&&setTimeout(y,0)});chrome.runtime.onMessage.addListener((e,i,t)=>(e&&e.type==="threadfinder:search"&&typeof e.term=="string"&&(h(e.term),t()),!1));
